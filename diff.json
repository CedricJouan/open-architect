{"main.py": "from fastapi import FastAPI, Request\nfrom fastapi.responses import HTMLResponse\nfrom fastapi.staticfiles import StaticFiles\nfrom fastapi.templating import Jinja2Templates\nfrom models import Excuse\nfrom utils import (\n    get_random_excuse,\n    procrastinate_task,\n    add_favorite_excuse,\n    get_favorite_excuses,\n    get_random_favorite_excuse,\n    get_procrastination_level,\n)\nimport os\nimport signal\n\napp = FastAPI()\ntemplates = Jinja2Templates(directory=\"templates\")\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n\n\n@app.get(\"/\", response_class=HTMLResponse)\nasync def root(request: Request):\n    return templates.TemplateResponse(\"index.html\", {\"request\": request})\n\n\n@app.get(\"/excuse\")\nasync def get_random_excuse_route():\n    return get_random_excuse()\n\n\n@app.post(\"/procrastinate\")\nasync def procrastinate(task: str):\n    return procrastinate_task(task)\n\n\n@app.post(\"/favorite-excuses\")\nasync def add_favorite_excuse_route(excuse: Excuse):\n    return add_favorite_excuse(excuse)\n\n\n@app.get(\"/favorite-excuses\")\nasync def get_favorite_excuses_route():\n    return get_favorite_excuses()\n\n\n@app.get(\"/random-favorite-excuse\")\nasync def get_random_favorite_excuse_route():\n    return get_random_favorite_excuse()\n\n\n@app.get(\"/level\")\nasync def get_procrastination_level_route():\n    return get_procrastination_level()\n\n\n@app.post(\"/stop\")\nasync def stop_api():\n    os.kill(os.getpid(), signal.SIGINT)\n    return {\"message\": \"API is stopping...\"}\n"}